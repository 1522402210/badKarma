# BadKarma - Shell extension commands
#
# All the shell commands inside this configuration file
# must be inside a category.
# All the category are formed by service name, except for the hostlist one.
# 
# Before adding commands take a look at the available variables:
#
# 	variables
# 	----------
# 	$host - target host
# 	$port - target port
# 	$domain - target hostname
# 	$wordlists - path to badkarma's wordlists
#   $outfile - path to save nmap scan
#

[hostlist]
nmap_default = nmap -oX $outfile $host
nmap_intense_scan = nmap -T4 -A -v -oX $outfile $host
nmap_intense_scan_plus_udp = sudo nmap -sS -sU -T4 -A -v -oX $outfile $host
nmap_intense_scan_all_tcp = nmap -p 1-65535 -T4 -A -v -oX $outfile $host
nmap_intense_scan_no_ping = nmap -T4 -A -v -Pn -oX $outfile $host
nmap_ping_scan = nmap -sn -oX $outfile $host

nmap_scan_full = sudo nmap -Pn -sU -sV -sC -A -p- -O -oX $outfile $host
nmap_scan_full_syn = nmap -Pn -sV -sC -A -p- -oX $outfile $host
nmap_full_tcp = nmap -Pn -sT -p- -A -oX $outfile $host
nmap_stealth_full_tcp = nmap -Pn -sT -p- -oX $outfile $host
nmap_scan_udp = sudo nmap -sU -T4 -sC -oX $outfile $host
nmap_os_identify = sudo nmap -O -oX $outfile $host
nmap_traceroute_geolocate = sudo nmap --traceroute --script traceroute-geolocation.nse -oX $outfile $host 
nmap_dnsbrute = nmap --script dns-brute.nse -oX $outfile $domain
nmap_hostmap = nmap --script hostmap-bfk.nse -oX $outfile $host

bettercap_kill = sudo bettercap --kill -T $host
bettercap_sniff_full = sudo bettercap -X --proxy-https --proxy-http -T $host

unicornscan_basic_scan = sudo unicornscan –Iv $host
unicornscan_tcp_syn_scan = sudo unicornscan -msf -v -I $host
unicornscan_udp_scan = sudo unicornscan –mU –v –I $host

dnsrecon = dnsrecon -d $domain -D /usr/share/wordlists/dnsmap.txt -t std
dnsenum = dnsenum $domain -f $wordlists/subdomains.txt
sublist3r = sublist3r -d $domain

whois = whois $host

[generic]
ncat = ncat $host $port
telnet = telnet $host $port
grab_banner = echo | nc -v -n -w1 $host $port
nmap_grab_banner = nmap -sV --script=banner -oX $outfile -p$port $host
nmap_default_scripts = nmap -sV -sC -oX $outfile -p$port $host

[http]
arachni = sudo arachni http://$host:$port
skipfish = skipfish -o /tmp/skip http://$host:$port
whatweb = whatweb $host:$port
dirb = dirb http://$host:$port
wafw00f = wafw00f http://$host:$port
wpscan = wpscan -e t,tt,u,p -r http://$host:$port/
httrack = httrack http://$host:$port -O /tmp/httrack-$host:$port
nikto_default = nikto -h $host:$port
nikto_ssl = nikto -ssl -h $host:$port
dirsearch_default_iis = dirsearch --url http://$host:$port/ -r -t 4 -e asp,aspx,htm,html,txt,sql,js,ashx
dirsearch_default_php = dirsearch --url http://$host:$port/ -r -t 4 -e php,php5,php4,phtml,php7,htm,html,sql,js,txt
dirsearch_default_cgi = dirsearch --url http://$host:$port/ -r -t 4 -e cgi,html,htm,sql,js,txt
dirsearch_junk_files = dirsearch --url http://$host:$port/ -r -t 4 -e txt,rar,zip,7z,config,conf,pdf,sql,sqlite,dump
nmap_webdav_scan = nmap --script http-webdav-scan -oX $outfile -p$port $host
nmap_userdir_enum= nmap -sV --script=http-userdir-enum -oX $outfile -p$port $host
nmap_vhosts = nmap -sV --script=http-vhosts -oX $outfile -p$port $host
nmap_waf_detect = nmap -sV --script=http-waf-detect -oX $outfile -p$port $host
nmap_waf_fingerprint = nmap -sV --script=http-waf-fingerprint -oX $outfile -p$port $host
metasploit_verb_bypass = msfconsole -q -x "use auxiliary/scanner/http/verb_auth_bypass; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_dir_listing = msfconsole -q -x "use auxiliary/scanner/http/dir_listing; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_cert = msfconsole -q -x "use auxiliary/scanner/http/cert; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_openproxy = msfconsole -q -x "use auxiliary/scanner/http/open_proxy; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_dirscanner = msfconsole -q -x "use auxiliary/scanner/http/dir_scanner; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_files_dit = msfconsole -q -x "use auxiliary/scanner/http/files_dir; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_login = msfconsole -q -x "use auxiliary/scanner/http/http_login; set RHOSTS $host; set RPORT $port; run; exit;"

[telnet]
nmap_brute = nmap --script telnet-brute -oX $outfile -p$port $host
metasploit_version = msfconsole -q -x "use auxiliary/scanner/telnet/telnet_version; set RHOSTS $host;set RPORT $port; run; exit;"
metasploit_login = msfconsole -q -x "use auxiliary/scanner/telnet/telnet_login; set RHOSTS $host; set RPORT $port; run; exit;"

[ftp]
ftpclient = ftp $host $port 
nmap_brute = nmap --script ftp-brute -oX $outfile -p$port $host
nmap_vsftpd_backdoor = nmap --script ftp-vsftpd-backdoor -oX $outfile -p$port $host
metasploit_version = msfconsole -q -x "use auxiliary/scanner/ftp/ftp_version; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_anonymous = msfconsole -q -x "use auxiliary/scanner/ftp/anonymous; set RHOSTS $host; set RPORT $port; run; exit;"

[ssh]
connect-as-root = ssh root@$host -p $port
nmap_brute = nmap --script ssh-brute -oX $outfile -p$port $host
nmap_ssh_hostkey = nmap $host -p $port -oX $outfile --script ssh-hostkey --script-args ssh_hostkey=all
nmap_ssh2_enum_algos = nmap --script ssh2-enum-algos -oX $outfile -p$port $host

[upnp]
nmap_info_tcp = nmap -p $port -oX $outfile --script=upnp-info $host
nmap_info_udp = sudo nmap -sU -p $port -oX $outfile --script=upnp-info $host

[domain]
nmap_service_discovery_tcp = nmap --script=dns-service-discovery -oX $outfile -p $port $host
nmap_service_discovery_udp = sudo nmap -sU --script=dns-service-discovery -oX $outfile -p $port $host

[netbios-ssn]
enum4linux = enum4linux $host
nbtscan = nbtscan $host
samrdump = python /usr/share/doc/python-impacket/examples/samrdump.py $host $port/SMB
nmap_brute = nmap -sV --script=smb-brute -p$port -oX $outfile $host
nmap_enum_users = nmap --script smb-enum-users.nse -oX $outfile -p$port $host
nmap_connection_flood = nmap --script smb-flood.nse -p$port $host 
metasploit_pipe_auditor =  msfconsole -q -x "use auxiliary/scanner/smb/pipe_auditor; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_pipe_dcerpc_auditor = msfconsole -q -x "use auxiliary/scanner/smb/pipe_dcerpc_auditor; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_enumshares = msfconsole -q -x "use auxiliary/scanner/smb/smb_enumshares; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_enumeusers = msfconsole -q -x "use auxiliary/scanner/smb/smb_enumusers; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_lookupsid = msfconsole -q -x "use auxiliary/scanner/smb/smb_lookupsid; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_version = msfconsole -q -x "use auxiliary/scanner/smb/smb_version; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_login = msfconsole -q -x "use auxiliary/scanner/smb/smb_login; set RHOSTS $host; set RPORT $port; run; exit;"

[pop3]
metasploit_version = msfconsole -q -x "use auxiliary/scanner/pop3/pop3_version; set RHOSTS $host; set RPORT $port; run; exit;"

[smtp]
smtp-user-enum_VRFY = smtp-user-enum -M VRFY -U $wordlists/users.txt -t $host -p $port
smtp-user-enum_RCPT = smtp-user-enum -M RCPT -U $wordlists/users.txt -t $host -p $port
smtp-user-enum_EXPN = smtp-user-enum -M EXPN -U $wordlists/users.txt -t $host -p $port
nmap_brute = nmap -sV --script smtp-brute -p$port -oX $outfile $host
nmap_commands = nmap -sV --script smtp-commands -oX $outfile -p$port $host
nmap_enum_users = nmap --script smtp-enum-users.nse -oX $outfile -p$port $host
nmap_open_relay = nmap --script smtp-open-relay.nse -oX $outfile -p$port $host
metasploit_version = msfconsole -q -x "use auxiliary/scanner/smtp/smtp; set RHOSTS $host; set RPORT $port; run; exit;"

[snmp]
snmp-check = snmp-check -t $host -p $port -c public
snmpwalk = snmpwalk -c public $host
onesixtyone = onesixtyone -c /usr/share/doc/onesixtyone/dict.txt $host
nmap_win32_users = nmap -sU -p$port --script=snmp-win32-users -oX $outfile $host
nmap_brute = nmap -sU -p$port --script snmp-brute -oX $outfile $host 
metasploit_enum = msfconsole -q -x "use auxiliary/scanner/snmp/snmp_enum; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_enum_shares = msfconsole -q -x "use auxiliary/scanner/snmp/snmp_enumshares; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_enum_users = msfconsole -q -x "use auxiliary/scanner/snmp/snmp_enumusers; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_login = msfconsole -q -x "use auxiliary/scanner/snmp/snmp_login; set RHOSTS $host; set RPORT $port; run; exit;"

[ldap]
ldapsearch = ldapsearch -h $host -p $port -x -s base
nmap_brute = nmap -p$port --script ldap-brute --script-args ldap.base='"cn=users,dc=cqure,dc=net"' -oX $outfile $host
nmap_rootdse = nmap -p$port --script ldap-rootdse -oX $outfile $host

[rpcbind]
rpcinfo = rpcinfo -p $host

[vnc]
vncviewer = vncviewer $host:$port
nmap_brute = nmap -sV --script=vnc-brute -oX $outfile -p$port $host
nmap_realvnc_auth_bypass = nmap -sV --script=realvnc-auth-bypass -p$port $host
metasploit_login = msfconsole -q -x "use auxiliary/scanner/vnc/vnc_login; set RHOSTS $host; set RPORT $port; run; exit;"
metasploit_none_auth = msfconsole -q -x "use auxiliary/scanner/vnc/vnc_none_auth; set RHOSTS $host; set RPORT $port; run; exit;"

[ms-wbt-server]
rdesktop = rdesktop $host:$port
nmap_enum_encryption = nmap -p$port -oX $outfile --script rdp-enum-encryption $host
nmap_vuln_ms12-020 = nmap -sV --script=rdp-vuln-ms12-020 -oX $outfile -p$port $host

[ms-sql-m]
connect-as-sa = python /usr/share/doc/python-impacket/examples/mssqlclient.py -p $port sa@$host
nmap_info = nmap -p$port --script ms-sql-info --script-args mssql.instance-port=$port -oX $outfile $host
nmap_brute = nmap -sV --script=ms-sql-brute -oX $outfile -p$port $host
nmap_empty_password = nmap -sV --script=ms-sql-empty-password -oX $outfile -p$port $host
nmap_ntlm_info = nmap -sV --script=ms-sql-ntlm-info -oX $outfile -p$port $host
nmap_config = nmap -sV --script=ms-sql-config -oX $outfile -p$port $host
nmap_dac = nmap -sV --script=ms-sql-dac -oX $outfile -p$port $host
metasploit_login = msfconsole -q -x "use auxiliary/scanner/mssql/mssql_login; set RHOSTS $host; set RPORT $port; run; exit;"

[mysql]
connect-as-root = mysql -u root -h $host --port=$port -p
nmap_audit = nmap --script=mysql-audit -p$port -oX $outfile $host
nmap_enum = nmap --script=mysql-enum -p$port -oX $outfile $host
nmap_brute = nmap -sV --script=mysql-brute -oX $outfile -p$port $host
nmap_empty_password = nmap -sV --script=mysql-empty-password -oX $outfile -p$port $host
nmap_auth_bypass = nmap -sV --script=mysql-auth-bypass -p$port -oX $outfile $host
nmap_users = nmap -sV --script=mysql-users -p$port -oX $outfile $host
nmap_databases = nmap -sV --script=mysql-databases -p$port -oX $outfile $host
metasploit_login = msfconsole -q -x "use auxiliary/scanner/mysql/mysql_login; set RHOSTS $host; set RPORT $port; run; exit;"

[oracle]
nmap_brute = nmap -sV --script=oracle-brute -p$port -oX $outfile $host
nmap_brute_stealth = nmap -sV --script=oracle-brute-stealth -p$port -oX $outfile $host
nmap_enum_users = nmap -sV --script=oracle-enum-users -p$port -oX $outfile $host
nmap_sid_brute = nmap -sV --script=oracle-sid-brute -p$port -oX $outfile $host
nmap_tns_version = nmap -sV --script=oracle-tns-version -p$port -oX $outfile $host

[psql]
connect-as-postgres = psql -h $host -p $port -U postgres